{"version":3,"sources":["Header/Header.js","pages/Begin.js","picture/dragon.jpg","picture/tiger.jpg","picture/bird.jpg","pages/Sign.js","pages/Example.js","pages/Font.js","pages/Test.js","pages/Vote.js","pages/Bye.js","App.js","index.js"],"names":["Header","state","current","handleClick","e","console","log","setState","key","rightClick","alert","this","className","span","onClick","selectedKeys","mode","Item","to","size","shape","danger","type","React","Component","Begin","props","showModal","isModalVisible","handleOk","handleCancel","isModelVisible","setIsModelVisible","bind","Container","Jumbotron","fluid","title","visible","okText","nOk","onCancel","label","name","rules","required","message","placeholder","Meta","Card","Sign","placement","connect","notification","info","duration","description","access","account","targetTime","Date","getTime","resetTime","redirect","a","window","ethereum","request","method","accounts","str","length","slice","history","push","backgroundColor","style","fontWeight","marginTop","fontSize","color","onOk","target","width","cover","src","dragon","height","tiger","bird","Example","Alert","Font","Test","accountChanged","test","provider","testWeb3","on","msg","isConnected","params","from","gas","gasPrice","value","data","then","result","catch","error","detectEthereumProvider","content","web3","utils","asciiToHex","delta1","delta2","delta3","Vote","cnt1","cnt2","cnt3","toTop","toDown","timerID","setInterval","tick","clearInterval","scrollTo","onLoad","Bye","location","href","ScrollToTop","prevProps","pathname","document","getElementById","children","withRouter","App","exact","path","component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2f442b65.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Menu, Button,Row, Col,Space} from 'antd';\r\n// import { MailOutlined, AppstoreOutlined, SettingOutlined } from '@ant-design/icons';\r\nimport './Header.css';\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route,\r\n    Link\r\n} from 'react-router-dom';\r\n\r\n\r\n// const { SubMenu } = Menu;\r\nimport {\r\n    Navbar,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    Dropdown,\r\n    DropdownItem,\r\n    DropdownMenu,\r\n    DropdownToggle\r\n} from 'reactstrap';\r\n\r\n\r\n\r\n\r\nclass Header extends React.Component {\r\n    state = {\r\n        current: 'mail',\r\n    };\r\n\r\n    handleClick = e => {\r\n        console.log('click ', e);\r\n        this.setState({ current: e.key });\r\n    };\r\n\r\n    rightClick=e=>{\r\n        alert('right click');\r\n    }\r\n\r\n    render() {\r\n        const { current } = this.state;\r\n        return (\r\n            <div className=\"main\">\r\n                <Row>\r\n                    <Col span={3}></Col>\r\n                    <Col span={9}>\r\n\r\n                        <Menu\r\n\r\n                            onClick={this.handleClick} selectedKeys={[current]} mode=\"horizontal\">\r\n\r\n\r\n                            {/*<Menu.Item key=\"app\" disabled icon={<AppstoreOutlined />}>*/}\r\n                            {/*    Navigation Two*/}\r\n                            {/*</Menu.Item>*/}\r\n                            {/*<SubMenu key=\"SubMenu\" icon={<SettingOutlined />} title=\"Navigation Three - Submenu\">*/}\r\n                            {/*    <Menu.ItemGroup title=\"Item 1\">*/}\r\n                            {/*        <Menu.Item key=\"setting:1\">Option 1</Menu.Item>*/}\r\n                            {/*        <Menu.Item key=\"setting:2\">Option 2</Menu.Item>*/}\r\n                            {/*    </Menu.ItemGroup>*/}\r\n                            {/*    <Menu.ItemGroup title=\"Item 2\">*/}\r\n                            {/*        <Menu.Item key=\"setting:3\">Option 3</Menu.Item>*/}\r\n                            {/*        <Menu.Item key=\"setting:4\">Option 4</Menu.Item>*/}\r\n                            {/*    </Menu.ItemGroup>*/}\r\n                            {/*</SubMenu>*/}\r\n\r\n                            {/*<Menu.Item key=\"mail\" >*/}\r\n                            {/*    Navigation One*/}\r\n                            {/*</Menu.Item>*/}\r\n                            {/*<Menu.Item key=\"alipay\">*/}\r\n                            {/*    <a href=\"https://fromddy.github.io\" target=\"_blank\" rel=\"noopener noreferrer\">*/}\r\n                            {/*        Navigation Four - Link*/}\r\n                            {/*    </a>*/}\r\n                            {/*</Menu.Item>*/}\r\n\r\n                            <Menu.Item key=\"begin\" >\r\n                                活动开始\r\n                                <Link to='/begin'></Link>\r\n\r\n\r\n\r\n                            </Menu.Item>\r\n\r\n                            <Menu.Item key=\"sign\">\r\n                                报名期\r\n                                <Link to='/sign'></Link>\r\n                            </Menu.Item>\r\n\r\n                            <Menu.Item key=\"vote\">\r\n                                投票期\r\n                                <Link to='/vote'></Link>\r\n                            </Menu.Item>\r\n\r\n                            <Menu.Item key=\"end\">\r\n                                结算期\r\n                                <Link to='/end'></Link>\r\n                            </Menu.Item>\r\n\r\n                            <Menu.Item key=\"example\">\r\n                                举个例子\r\n                                <Link to='/example'></Link>\r\n                            </Menu.Item>\r\n\r\n\r\n\r\n\r\n\r\n                        </Menu>\r\n                    </Col>\r\n\r\n                    <Col span={6}> </Col>\r\n\r\n                    <Col span={6}>\r\n\r\n                        <Space>\r\n                            <Button className=\"headerButton\"\r\n                                    size=\"learge\"\r\n                                    shape=\"round\"\r\n                                    danger=\"true\"\r\n\r\n\r\n                                    type=\"primary\">connect</Button>\r\n\r\n                        </Space>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n\r\n\r\n// ReactDOM.render(<App />, mountNode);\r\n","import React from 'react';\r\nimport { useState } from 'react';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Jumbotron, Container } from 'reactstrap';\r\n\r\n\r\nimport Header from '../Header/Header';\r\n\r\nimport { Modal, Button,Form,Input } from 'antd';\r\n\r\n\r\n\r\n\r\nclass Begin extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // [isModalVisible, setIsModalVisible] = useState(false);\r\n        this.state = {\r\n            current: 'mail',\r\n            isModelVisible : false,\r\n            setIsModelVisible :false\r\n        };\r\n        this.showModal = this.showModal.bind(this);\r\n        this.handleOk = this.handleOk.bind(this);\r\n        this.handleCancel = this.handleCancel.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    showModal = () => {\r\n\r\n        this.setState({\r\n            isModalVisible: true\r\n        });\r\n\r\n    };\r\n\r\n   handleOk = () => {\r\n       this.setState({\r\n           isModalVisible: false\r\n       });\r\n   }\r\n\r\n    handleCancel = () => {\r\n        // this.state.setIsModalVisible(false);\r\n        this.setState({\r\n            isModalVisible: false\r\n        });\r\n    };\r\n\r\n\r\n\r\n    handleClick = e => {\r\n        console.log('click ', e);\r\n        this.setState({ current: e.key });\r\n    };\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <Header></Header>\r\n                <br/>\r\n\r\n                <Container>\r\n                    <Jumbotron fluid>\r\n                        <Container fluid>\r\n                            <h1 className=\"display-3\">FluidDAO</h1>\r\n                            <p className=\"lead\"></p>\r\n                            <br/>\r\n\r\n                            {/*<Button>开启活动</Button>*/}\r\n                            {/*<BeginButton> this is me </BeginButton>*/}\r\n\r\n                            <div>\r\n                                <Button type=\"primary\" onClick={this.showModal}>\r\n                                    NEW ACTIVITY\r\n                                </Button>\r\n                                <Modal title=\"Basic Modal\" visible={this.state.isModalVisible}\r\n                                       okText=\"提交\"\r\n\r\n                                       nOk={this.handleOk} onCancel={this.handleCancel}>\r\n                                    <p>Some contents...</p>\r\n                                    <p>Some contents...</p>\r\n                                    <p>Some contents...</p>\r\n                                    <Form.Item\r\n                                        label=\"Username\"\r\n                                        name=\"username\"\r\n                                        rules={[{ required: true, message: 'Please input your username!' }]}\r\n                                    >\r\n                                        <Input />\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item label=\"Field A\">\r\n                                        <Input placeholder=\"input placeholder\" />\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"Field B\">\r\n                                        <Input placeholder=\"input placeholder\" />\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item\r\n                                        label=\"Username\"\r\n                                        name=\"username\"\r\n                                        rules={[{ required: true, message: 'Please input your username!' }]}\r\n                                    >\r\n                                        <Input />\r\n                                    </Form.Item>\r\n\r\n                                    {/*<Form.Item >*/}\r\n                                    {/*    <Button type=\"primary\">Submit</Button>*/}\r\n                                    {/*</Form.Item>*/}\r\n\r\n\r\n                                </Modal>\r\n\r\n                            </div>\r\n\r\n                        </Container>\r\n                    </Jumbotron>\r\n                </Container>\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Begin;\r\n\r\n","export default __webpack_public_path__ + \"static/media/dragon.5ab6a439.jpg\";","export default __webpack_public_path__ + \"static/media/tiger.c22d6858.jpg\";","export default __webpack_public_path__ + \"static/media/bird.5e0f20d9.jpg\";","import React from 'react';\r\nimport {Container, Jumbotron} from 'reactstrap';\r\nimport {Button, Col, Form, Input, Modal, Row,Timeline} from 'antd';\r\nimport detectEthereumProvider from '@metamask/detect-provider';\r\n\r\nimport { Icon } from '@ant-design/compatible';\r\nimport { notification, Divider, Space } from 'antd';\r\nimport {\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport {Link} from \"react-router-dom\";\r\nimport { Card, Avatar } from 'antd';\r\nimport { EditOutlined, EllipsisOutlined, SettingOutlined } from '@ant-design/icons';\r\nimport 'ant-design-pro/dist/ant-design-pro.css';\r\nimport CountDown from 'ant-design-pro/lib/CountDown';\r\nimport './style.css';\r\n\r\nimport dragon from \"../picture/dragon.jpg\"\r\nimport tiger from \"../picture/tiger.jpg\"\r\nimport bird from \"../picture/bird.jpg\"\r\nconst { Meta } = Card;\r\n\r\n\r\nconst openNotification = placement => {\r\n    notification.info({\r\n        duration: 3,\r\n        message: '请先登录钱包',\r\n        description:\r\n            '登录钱包校验您是否为团队领袖',\r\n        placement,\r\n    });\r\n};\r\n\r\nconst openNotification2 = placement => {\r\n    notification.info({\r\n        duration: 3,\r\n        message: '团队信息注册成功',\r\n        description:\r\n            '请到页面下方进行查看',\r\n        placement,\r\n    });\r\n};\r\n\r\nconst openNotification3 = placement => {\r\n    notification.info({\r\n        duration: 3,\r\n        message: '团队注册时间结束',\r\n        description:\r\n            '进入大众投票环节',\r\n        placement,\r\n    });\r\n};\r\n\r\nexport const shorter = (str) =>\r\n    str?.length > 8 ? str.slice(0, 6) + '...' + str.slice(-4) : str\r\n\r\n\r\nfunction randomNum(minNum,maxNum){\r\n    switch(arguments.length){\r\n        case 1:\r\n            return parseInt(Math.random()*minNum+1,10);\r\n            break;\r\n        case 2:\r\n            return parseInt(Math.random()*(maxNum-minNum+1)+minNum,10);\r\n            break;\r\n        default:\r\n            return 0;\r\n            break;\r\n    }\r\n}\r\n\r\nclass Sign extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // [isModalVisible, setIsModalVisible] = useState(false);\r\n        this.state = {\r\n            connect:'connect',\r\n            access: '只有团队领袖拥有报名活动的权限',\r\n            account: '',\r\n            current: 'mail',\r\n            isModelVisible: false,\r\n            setIsModelVisible: false,\r\n            targetTime: new Date().getTime() + 24*60*60*1000\r\n        };\r\n        this.showModal = this.showModal.bind(this);\r\n        this.handleOk = this.handleOk.bind(this);\r\n        this.handleCancel = this.handleCancel.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.connect=this.connect.bind(this);\r\n        this.resetTime=this.resetTime.bind(this);\r\n        this.redirect=this.redirect.bind(this);\r\n\r\n\r\n    }\r\n\r\n    showModal = () => {\r\n        if(this.state.connect==='connect'){\r\n            openNotification('topLeft');\r\n            // return;\r\n        }\r\n        this.setState({\r\n            isModalVisible: true\r\n        });\r\n    };\r\n\r\n    handleOk = () =>{\r\n        openNotification2('topLeft');\r\n\r\n        this.setState({\r\n            isModalVisible: false\r\n\r\n        });\r\n        // this.props.history.push('/sign');\r\n    }\r\n\r\n    handleCancel = () => {\r\n        // this.state.setIsModalVisible(false);\r\n        this.setState({\r\n            isModalVisible: false\r\n        });\r\n    };\r\n\r\n    handleClick = e => {\r\n        console.log('click ', e);\r\n        this.setState({current: e.key});\r\n    };\r\n\r\n    async connect(){\r\n        const accounts= await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n        const account = accounts[0];\r\n        this.setState({connect: shorter(account)});\r\n        this.setState({access:\"欢迎尊贵的团队领袖开始报名\"});\r\n    }\r\n\r\n    resetTime(){\r\n        this.setState({\r\n            targetTime: new Date().getTime() + 24*60*60*1000\r\n        })\r\n\r\n    }\r\n\r\n    redirect(){\r\n\r\n        // window.location.href = \"/vote\";\r\n        openNotification3('topLeft');\r\n        this.props.history.push('/vote');\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n            <div className=\"second\">\r\n                <Row>\r\n                    <Col span={18}>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Button\r\n                            size=\"learge\"\r\n                            shape=\"round\"\r\n                            danger=\"true\"\r\n                            type=\"primary\"\r\n                            className=\"connectButton\"\r\n                            onClick={this.connect}\r\n                        >{this.state.connect}</Button>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Container >\r\n                    <Jumbotron fluid  fluid style={{backgroundColor:'transparent'}}>\r\n                        <Container fluid>\r\n                            <h1 className=\"display-3\" >Signup</h1>\r\n                            <p className=\"lead\" style={{ fontWeight:'bold'}}>{this.state.access}</p>\r\n\r\n                            <Row style={{marginTop:\"40px\"}}>\r\n                                <Col span={8}>\r\n                                </Col>\r\n                                <Col span={8}>\r\n                                    <Timeline >\r\n                                        <Timeline.Item>  由DAO组织的管理员发起活动 </Timeline.Item>\r\n                                        <Timeline.Item style={{ fontSize: '18px',fontWeight:'bold'}}  color=\"red\"\r\n                                        >由各个项目团队的领袖发起报名</Timeline.Item>\r\n                                        <Timeline.Item >由大众进行投票 </Timeline.Item>\r\n                                        <Timeline.Item>根据投票结果得出最终赢家 </Timeline.Item>\r\n                                    </Timeline>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                                <Button type=\"primary\" onClick={this.showModal}>\r\n                                    填写团队信息\r\n                                </Button>\r\n                                <Modal title=\"团队信息填写\" visible={this.state.isModalVisible}\r\n                                       okText=\"团队信息提交\"\r\n                                       onOk={this.handleOk} onCancel={this.handleCancel}>\r\n\r\n                                    <Form.Item\r\n                                        label=\"团队名称\"\r\n                                        name=\"name\"\r\n                                        rules={[{required: true, message: ''}]}\r\n                                    >\r\n                                        <Input/>\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item\r\n                                        label=\"团队简介\"\r\n                                        name=\"name\"\r\n                                        rules={[{required: true, message: ' '}]}\r\n                                    >\r\n                                        <Input/>\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item\r\n                                        label=\"可以包含其他信息，如团队标志图片等\"\r\n                                        name=\"name\"\r\n                                        rules={[{required: true, message: ' '}]}\r\n                                    >\r\n                                        )\r\n                                    </Form.Item>\r\n                                </Modal>\r\n                        </Container>\r\n                    </Jumbotron>\r\n                </Container>\r\n            </div>\r\n\r\n                <div>\r\n                    <br/>\r\n                    <br/>\r\n\r\n\r\n                    <Container>\r\n                            <h1>已报名团队信息</h1>\r\n\r\n                            <CountDown style={{ fontSize: 40 }} target={this.state.targetTime}  onClick={this.resetTime}/>\r\n\r\n\r\n                    </Container>\r\n                    <br/>\r\n                    <Row>\r\n\r\n                        <Col span={2}></Col>\r\n                        <Col span={7}>\r\n                            <Card\r\n                                style={{ width: \"90%\"}}\r\n                                cover={\r\n                                    // <img\r\n                                    //     alt=\"example\"\r\n                                    //     src=\"dragon.jpg\"\r\n                                    // />\r\n                                    <img src={dragon} style={{height:\"220px\"}}/>\r\n                                }\r\n                                // actions={[\r\n                                //     <SettingOutlined key=\"setting\" />,\r\n                                //     <EditOutlined key=\"edit\" />,\r\n                                //     <EllipsisOutlined key=\"ellipsis\" />,\r\n                                // ]}\r\n                            >\r\n                                <Meta\r\n                                    // avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\r\n                                    title=\"青龙团队\"\r\n                                    description=\"这是青龙团队的介绍信息\"\r\n                                />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col span={7}>\r\n                            <Card\r\n                                style={{ width: \"90%\" }}\r\n                                cover={\r\n                                    <img src={tiger} style={{height:\"220px\"}}/>\r\n                                }\r\n                                // actions={[\r\n                                //     <SettingOutlined key=\"setting\" />,\r\n                                //     <EditOutlined key=\"edit\" />,\r\n                                //     <EllipsisOutlined key=\"ellipsis\" />,\r\n                                // ]}\r\n                            >\r\n                                <Meta\r\n                                    // avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\r\n                                    title=\"白虎团队\"\r\n                                    description=\"这是白虎团队的介绍信息\"\r\n                                />\r\n                            </Card>\r\n                        </Col>\r\n                        <Col span={7}>\r\n                            <Card\r\n                                style={{ width: \"90%\" }}\r\n                                cover={\r\n                                    <img src={bird} style={{height:\"220px\"}}/>\r\n                                }\r\n                                // actions={[\r\n                                //     <SettingOutlined key=\"setting\" />,\r\n                                //     <EditOutlined key=\"edit\" />,\r\n                                //     <EllipsisOutlined key=\"ellipsis\" />,\r\n                                // ]}\r\n                            >\r\n                                <Meta\r\n                                    // avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\r\n                                    title=\"朱雀团队\"\r\n                                    description=\"这是朱雀团队的介绍信息\"\r\n                                />\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <br/><br/>\r\n\r\n                    <Button type=\"primary\" onClick={this.redirect}>\r\n                        团队注册时间结束后跳转到投票阶段\r\n                    </Button>\r\n\r\n                    <br/><br/>\r\n                    <br/><br/>\r\n\r\n\r\n\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Sign;\r\n","import React from 'react';\r\nimport { Alert } from 'reactstrap';\r\n\r\nconst Example = (props) => {\r\n  return (\r\n    <div>\r\n      <Alert color=\"primary\">\r\n        This is a primary alert — check it out!\r\n      </Alert>\r\n      <Alert color=\"secondary\">\r\n        This is a secondary alert — check it out!\r\n      </Alert>\r\n      <Alert color=\"success\">\r\n        This is a success alert — check it out!\r\n      </Alert>\r\n      <Alert color=\"danger\">\r\n        This is a danger alert — check it out!\r\n      </Alert>\r\n      <Alert color=\"warning\">\r\n        This is a warning alert — check it out!\r\n      </Alert>\r\n      <Alert color=\"info\">\r\n        This is a info alert — check it out!\r\n      </Alert>\r\n      <Alert color=\"light\">\r\n        This is a light alert — check it out!\r\n      </Alert>\r\n      <Alert color=\"dark\">\r\n        This is a dark alert — check it out!\r\n      </Alert>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Example;","import React from 'react';\r\nimport {Container, Jumbotron} from 'reactstrap';\r\nimport {Button, Col, Form, Input, Modal, Row,Timeline} from 'antd';\r\nimport detectEthereumProvider from '@metamask/detect-provider';\r\n\r\nimport { Icon } from '@ant-design/compatible';\r\nimport { notification, Divider, Space } from 'antd';\r\nimport {\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport {Link} from \"react-router-dom\";\r\nimport './style.css';\r\n\r\n\r\n\r\nconst openNotification = placement => {\r\n    notification.info({\r\n        duration: 3,\r\n        message: '请先登录钱包',\r\n        description:\r\n            '登录钱包校验您是否为DAO的管理员',\r\n        placement,\r\n    });\r\n};\r\n\r\nconst openNotification2 = placement => {\r\n    notification.info({\r\n        duration: 3,\r\n        message: '进入团队注册页面',\r\n        description:\r\n            '由各个项目团队的领袖发起报名',\r\n        placement,\r\n    });\r\n};\r\n\r\n\r\nexport const shorter = (str) =>\r\n    str?.length > 8 ? str.slice(0, 6) + '...' + str.slice(-4) : str\r\n\r\n\r\nclass Font extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // [isModalVisible, setIsModalVisible] = useState(false);\r\n        this.state = {\r\n            connect:'connect',\r\n            access: '只有DAO组织的管理员有开启活动的权限',\r\n            account: '',\r\n            current: 'mail',\r\n            isModelVisible: false,\r\n            setIsModelVisible: false\r\n        };\r\n        this.showModal = this.showModal.bind(this);\r\n        this.handleOk = this.handleOk.bind(this);\r\n        this.handleCancel = this.handleCancel.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.connect=this.connect.bind(this);\r\n    }\r\n\r\n    showModal = () => {\r\n        if(this.state.connect==='connect'){\r\n            openNotification('topLeft');\r\n            // return;\r\n        }\r\n        this.setState({\r\n            isModalVisible: true\r\n        });\r\n    };\r\n\r\n    handleOk = () =>{\r\n        openNotification2('topLeft');\r\n\r\n        this.setState({\r\n            isModalVisible: false\r\n        });\r\n\r\n\r\n\r\n        this.props.history.push('/sign');\r\n    }\r\n\r\n    handleCancel = () => {\r\n        // this.state.setIsModalVisible(false);\r\n        this.setState({\r\n            isModalVisible: false\r\n        });\r\n    };\r\n\r\n    handleClick = e => {\r\n        console.log('click ', e);\r\n        this.setState({current: e.key});\r\n    };\r\n\r\n    async connect(){\r\n        const accounts= await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n        const account = accounts[0];\r\n        this.setState({connect: shorter(account)});\r\n        this.setState({access:\"欢迎尊贵的管理员开启新的活动\"});\r\n    }\r\n\r\n    // async accountChanged(){\r\n    //     window.ethereum.on('accountsChanged', (accounts) => {\r\n    //         const account = accounts[0];\r\n    //         this.setState({account:account});\r\n    //         // Handle the new accounts, or lack thereof.\r\n    //         // \"accounts\" will always be an array, but it can be empty.\r\n    //     });\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"first\">\r\n                <Row>\r\n                    <Col span={18}>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Button\r\n                            size=\"learge\"\r\n                            shape=\"round\"\r\n                            danger=\"true\"\r\n                            type=\"primary\"\r\n                            className=\"connectButton\"\r\n                            onClick={this.connect}\r\n                        >{this.state.connect}</Button>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Container >\r\n                    <Jumbotron fluid style={{backgroundColor:'transparent'}}>\r\n                        <Container fluid>\r\n                            <h1 className=\"display-3\" style={{color:'white'}}>FluidDAO</h1>\r\n                            <p className=\"lead\" style={{color:'white'}}>{this.state.access}</p>\r\n\r\n                            <Row style={{marginTop:\"40px\"}}>\r\n                                <Col span={9}>\r\n                                </Col>\r\n                                <Col span={6}>\r\n                                    <Timeline style={{color:'white'}}>\r\n                                        <Timeline.Item\r\n                                            style={{ fontSize: '18px',fontWeight:'bold'}}  color=\"red\"\r\n                                        >  由DAO组织的管理员发起活动 </Timeline.Item>\r\n                                        <Timeline.Item>由各个项目团队的领袖发起报名</Timeline.Item>\r\n                                        <Timeline.Item >由大众进行投票 </Timeline.Item>\r\n                                        <Timeline.Item>根据投票结果得出最终赢家 </Timeline.Item>\r\n                                    </Timeline>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <div>\r\n\r\n                                <Button type=\"primary\" onClick={this.showModal}>\r\n                                    NEW ACTIVITY\r\n                                </Button>\r\n                                <Modal title=\"活动信息填写\" visible={this.state.isModalVisible}\r\n                                       okText=\"开启新的活动\"\r\n                                       onOk={this.handleOk} onCancel={this.handleCancel}>\r\n\r\n                                    <Form.Item\r\n                                    label=\"活动名称\"\r\n                                    name=\"name\"\r\n                                    rules={[{required: true, message: ' '}]}\r\n                                >\r\n                                    <Input/>\r\n                                </Form.Item>\r\n\r\n                                    <Form.Item\r\n                                        label=\"活动简介\"\r\n                                        name=\"name\"\r\n                                        rules={[{required: true, message: ' '}]}\r\n                                    >\r\n                                        <Input/>\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item\r\n                                        label=\"团队数量\"\r\n                                        name=\"name\"\r\n                                        rules={[{required: true, message: ' '}]}\r\n                                    >\r\n                                        <Input/>\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item\r\n                                        label=\"活动时间\"\r\n                                        name=\"name\"\r\n                                        rules={[{required: true, message: ' '}]}\r\n                                    >\r\n                                        <Input/>\r\n                                    </Form.Item>\r\n\r\n                                </Modal>\r\n\r\n                            </div>\r\n\r\n                        </Container>\r\n                    </Jumbotron>\r\n                </Container>\r\n                <br/>\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Font;\r\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Container, Jumbotron} from 'reactstrap';\r\n\r\nimport {Button, Col, Form, Input, Modal, Row} from 'antd';\r\nimport detectEthereumProvider from '@metamask/detect-provider';\r\n\r\nimport Web3 from 'web3';\r\n\r\n\r\n// import App from '../untility/App';\r\n// import App from '../utility/AppJSX';\r\n\r\n\r\nclass Test extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // [isModalVisible, setIsModalVisible] = useState(false);\r\n        this.state = {\r\n            account: 'have no account',\r\n            current: 'mail',\r\n            isModelVisible: false,\r\n            setIsModelVisible: false\r\n        };\r\n        this.showModal = this.showModal.bind(this);\r\n        this.handleOk = this.handleOk.bind(this);\r\n        this.handleCancel = this.handleCancel.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.connect=this.connect.bind(this);\r\n        this.accountChanged=this.accountChanged.bind(this);\r\n        this.test=this.test.bind(this);\r\n        this.provider=this.provider.bind(this);\r\n        this.testWeb3=this.testWeb3.bind(this);\r\n\r\n        // this.componentDidMount=this.componentDidMount.bind(this);\r\n\r\n\r\n    }\r\n\r\n    showModal = () => {\r\n        this.setState({\r\n            isModalVisible: true\r\n        });\r\n    };\r\n\r\n    handleOk = () => {\r\n        this.setState({\r\n            isModalVisible: false\r\n        });\r\n    }\r\n\r\n    handleCancel = () => {\r\n        // this.state.setIsModalVisible(false);\r\n        this.setState({\r\n            isModalVisible: false\r\n        });\r\n    };\r\n\r\n    handleClick = e => {\r\n        console.log('click ', e);\r\n        this.setState({current: e.key});\r\n    };\r\n\r\n    async connect(){\r\n        const accounts= await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n        const account = accounts[0];\r\n        this.setState({account:account});\r\n    }\r\n\r\n    async accountChanged(){\r\n        window.ethereum.on('accountsChanged', (accounts) => {\r\n            const account = accounts[0];\r\n           this.setState({account:account});\r\n            // Handle the new accounts, or lack thereof.\r\n            // \"accounts\" will always be an array, but it can be empty.\r\n        });\r\n    }\r\n\r\n    test(){\r\n        let msg = window.ethereum.isConnected();\r\n        console.log(\"msg:\"+msg);\r\n        let params = [\r\n            {\r\n                from: '0x4CEaa0A16d0831d7d46cb72006F959a87f618A47',\r\n                to: '0x102e277c34668E96Cbed6169FA1195002C11D746',\r\n                gas: '0x76c0', // 30400\r\n                gasPrice: '0x9184e72a000', // 10000000000000\r\n                value: '0x9184e72a', // 2441406250\r\n                data:\r\n                    '0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675',\r\n            },\r\n        ];\r\n        window.ethereum\r\n            .request({\r\n                method: 'eth_sendTransaction',\r\n                params,\r\n            })\r\n            .then((result) => {\r\n                console.log(\"result:::::\");\r\n                console.log(result);\r\n                // The result varies by by RPC method.\r\n                // For example, this method will return a transaction hash hexadecimal string on success.\r\n            })\r\n            .catch((error) => {\r\n                // If the request fails, the Promise will reject with an error.\r\n            });\r\n\r\n    }\r\n\r\n    async provider(){\r\n        const provider = await detectEthereumProvider();\r\n        if (provider) {\r\n            // startApp(provider); // Initialize your app\r\n            if (provider !== window.ethereum) {\r\n                console.error('Do you have multiple wallets installed?');\r\n            }else {\r\n                alert(\"provider success!\");\r\n\r\n                let content=this.web3.utils.asciiToHex(\"hello\");\r\n                alert(content);\r\n\r\n\r\n            }\r\n\r\n        } else {\r\n            console.log('Please install MetaMask!');\r\n        }\r\n\r\n    }\r\n\r\n    // componentDidMount(){\r\n    //     if (typeof web3 !== 'undefined') {\r\n    //         console.log(this.web3.currentProvider);\r\n    //         // Use Mist/MetaMask's provider\r\n    //         var web3js = new Web3(this.web3.currentProvider);\r\n    //\r\n    //         this.web3.version.getNetwork((err, netId) => {\r\n    //             switch (netId) {\r\n    //                 case \"1\":\r\n    //                     console.log('This is mainnet')\r\n    //                     break\r\n    //                 case \"2\":\r\n    //                     console.log('This is the deprecated Morden test network.')\r\n    //                     break\r\n    //                 case \"3\":\r\n    //                     console.log('This is the ropsten test network.')\r\n    //                     break\r\n    //                 case \"4\":\r\n    //                     console.log('This is the Rinkeby test network.')\r\n    //                     break\r\n    //                 case \"42\":\r\n    //                     console.log('This is the Kovan test network.')\r\n    //                     break\r\n    //                 default:\r\n    //                     console.log('This is an unknown network.')\r\n    //             }\r\n    //         })\r\n    //     } else {\r\n    //         console.log('No web3? You should consider trying MetaMask!')\r\n    //     }\r\n    // }\r\n    testWeb3(){\r\n        // if (window.ethereum) {\r\n        //     // 请求用户授权\r\n        //     window.ethereum.request({ method: 'eth_requestAccounts' }).then(accounts=>{\r\n        //         web3.eth.getAccounts((error, accounts) => {\r\n        //             window.web3.eth.defaultAccount = accounts[0];\r\n        //             console.log(accounts)\r\n        //         })\r\n        //     })\r\n        //\r\n        // } else  if (typeof web3 !== 'undefined') {\r\n        //     let web3 = new Web3(web3.currentProvider);\r\n        //     web3.eth.defaultAccount = web3.eth.accounts[0];\r\n        //     console.log(web3.eth.defaultAccount);\r\n        // } else {\r\n        //     // set the provider you want from Web3.providers\r\n        //     let web3 = new Web3(new Web3.providers.HttpProvider(\"http://localhost:7545\"));\r\n        // }\r\n    }\r\n    render() {\r\n        return (\r\n\r\n            <div>\r\n\r\n\r\n                <Row>\r\n                    <Col span={18}>\r\n\r\n                    </Col>\r\n\r\n                    <Col span={6}>\r\n                        <Button\r\n                            size=\"learge\"\r\n                            shape=\"round\"\r\n                            danger=\"true\"\r\n                            type=\"primary\"\r\n                            style={\r\n                                {\r\n                                    marginTop: \"20px\",\r\n                                    width: \"120px\"\r\n                                }\r\n                            }\r\n\r\n                        >connect</Button>\r\n                    </Col>\r\n                </Row>\r\n                <br/>\r\n\r\n                {/*<div style={{ backgroundColor:\"pink\",*/}\r\n                {/*    height:\"200px\"}}>*/}\r\n                {/*    <App/>*/}\r\n\r\n                {/*</div>*/}\r\n\r\n\r\n\r\n                <Container>\r\n                    <Jumbotron fluid>\r\n                        <Container fluid>\r\n                            <h1 className=\"display-3\">Test</h1>\r\n                            <p className=\"lead\">这里放一句比较响亮的口号，长度要比上面的长</p>\r\n                            <br/>\r\n                            <div>\r\n                                <p> {this.state.account} </p>\r\n                                <Button type=\"primary\" onClick={this.connect}>\r\n                                    connect\r\n                                </Button>\r\n                                <br/>\r\n\r\n                                <Button type=\"primary\" onClick={this.accountChanged}>\r\n                                    accountChanged\r\n                                </Button>\r\n\r\n                                <br/>\r\n                                <Button type=\"primary\" onClick={this.test}>\r\n                                   test\r\n                                </Button>\r\n\r\n                                <br/><br/>\r\n                                <Button type=\"primary\" onClick={this.provider}>\r\n                                    provider\r\n                                </Button>\r\n\r\n                                <br/><br/>\r\n                                <Button type =\"danger\" onClick={this.testWeb3}>\r\n                                    web3\r\n                                </Button>\r\n\r\n\r\n                            </div>\r\n\r\n\r\n                            <div>\r\n\r\n                                <br/>\r\n                                <br/>\r\n\r\n                                <Button type=\"primary\" onClick={this.showModal}>\r\n                                    NEW ACTIVITY\r\n                                </Button>\r\n                                <Modal title=\"Basic Modal\" visible={this.state.isModalVisible}\r\n                                       okText=\"提交\"\r\n\r\n                                       nOk={this.handleOk} onCancel={this.handleCancel}>\r\n\r\n                                    <Form.Item\r\n                                        label=\"Username\"\r\n                                        name=\"username\"\r\n                                        rules={[{required: true, message: 'Please input your username!'}]}\r\n                                    >\r\n                                        <Input/>\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item label=\"Field A\">\r\n                                        <Input placeholder=\"input placeholder\"/>\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"Field B\">\r\n                                        <Input placeholder=\"input placeholder\"/>\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item\r\n                                        label=\"Username\"\r\n                                        name=\"username\"\r\n                                        rules={[{required: true, message: 'Please input your username!'}]}\r\n                                    >\r\n                                        <Input/>\r\n                                    </Form.Item>\r\n\r\n                                    {/*<Form.Item >*/}\r\n                                    {/*    <Button type=\"primary\">Submit</Button>*/}\r\n                                    {/*</Form.Item>*/}\r\n                                </Modal>\r\n\r\n                            </div>\r\n\r\n                        </Container>\r\n                    </Jumbotron>\r\n                </Container>\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Test;\r\n","import React from 'react';\r\nimport {Container, Jumbotron} from 'reactstrap';\r\nimport {Button, Col, Form, Input, Modal, Row,Timeline} from 'antd';\r\nimport detectEthereumProvider from '@metamask/detect-provider';\r\n\r\nimport { Icon } from '@ant-design/compatible';\r\nimport { notification, Divider, Space } from 'antd';\r\nimport {\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport {Link} from \"react-router-dom\";\r\nimport { Card, Avatar } from 'antd';\r\nimport { EditOutlined, EllipsisOutlined, SettingOutlined } from '@ant-design/icons';\r\nimport 'ant-design-pro/dist/ant-design-pro.css';\r\nimport CountDown from 'ant-design-pro/lib/CountDown';\r\nimport './style.css';\r\n\r\nimport dragon from \"../picture/dragon.jpg\"\r\nimport tiger from \"../picture/tiger.jpg\"\r\nimport bird from \"../picture/bird.jpg\"\r\n\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\nconst { Meta } = Card;\r\n\r\nconst openNotification = placement => {\r\n    notification.info({\r\n        duration: 3,\r\n        message: '请先登录钱包',\r\n        description:\r\n            '演示时可直接点击【确认投票】',\r\n        placement,\r\n    });\r\n};\r\n\r\nconst openNotification2 = placement => {\r\n    notification.info({\r\n        duration: 3,\r\n        message: '您已经投票成功！',\r\n        description:\r\n            '真实应用场景时会调用钱包进行token转账',\r\n        placement,\r\n    });\r\n};\r\n\r\n\r\nexport const shorter = (str) =>\r\n    str?.length > 8 ? str.slice(0, 6) + '...' + str.slice(-4) : str\r\n\r\nfunction randomNum(minNum,maxNum){\r\n    switch(arguments.length){\r\n        case 1:\r\n            return parseInt(Math.random()*minNum+1,10);\r\n            break;\r\n        case 2:\r\n            return parseInt(Math.random()*(maxNum-minNum+1)+minNum,10);\r\n            break;\r\n        default:\r\n            return 0;\r\n            break;\r\n    }\r\n}\r\n\r\nlet delta1=1000;\r\nlet delta2=2000;\r\nlet delta3=3000;\r\n\r\nclass Vote extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // [isModalVisible, setIsModalVisible] = useState(false);\r\n        this.state = {\r\n            connect:'connect',\r\n            access: '所有人都可以为你喜欢的团队投票',\r\n            account: '',\r\n            current: 'mail',\r\n            isModelVisible: false,\r\n            setIsModelVisible: false,\r\n            targetTime: new Date().getTime() + 24*60*60*1000,\r\n            cnt1: 1000,\r\n            cnt2: 2000,\r\n            cnt3: 3000\r\n        };\r\n        this.showModal = this.showModal.bind(this);\r\n        this.handleOk = this.handleOk.bind(this);\r\n        this.handleCancel = this.handleCancel.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.connect=this.connect.bind(this);\r\n        this.resetTime=this.resetTime.bind(this);\r\n        this.redirect=this.redirect.bind(this);\r\n        this.toTop=this.toTop.bind(this);\r\n        this.toDown=this.toDown.bind(this);\r\n\r\n    }\r\n    componentDidMount() { // 生命周期\r\n        this.timerID = setInterval(\r\n            () => {\r\n                 delta1=delta1+30;\r\n                 delta2=delta2+20;\r\n                 delta3=delta3+10;\r\n\r\n                this.tick(delta1,delta2,delta3);\r\n            },\r\n            1000\r\n        );\r\n    }\r\n\r\n    componentWillUnmount() { // 生命周期\r\n        clearInterval(this.timerID);\r\n    }\r\n\r\n    tick(delta1,delta2,delta3) {\r\n        this.setState({\r\n            cnt1: delta1,\r\n            cnt2: delta2,\r\n            cnt3: delta3\r\n        });\r\n    }\r\n\r\n\r\n    showModal = () => {\r\n        if(this.state.connect==='connect'){\r\n            openNotification('topLeft');\r\n            // return;\r\n        }\r\n        this.setState({\r\n            isModalVisible: true\r\n        });\r\n    };\r\n\r\n    handleOk = () =>{\r\n        openNotification2('topLeft');\r\n\r\n        this.setState({\r\n            isModalVisible: false\r\n\r\n        });\r\n        // this.props.history.push('/sign');\r\n    }\r\n\r\n    handleCancel = () => {\r\n        // this.state.setIsModalVisible(false);\r\n        this.setState({\r\n            isModalVisible: false\r\n        });\r\n    };\r\n\r\n    handleClick = e => {\r\n        console.log('click ', e);\r\n        this.setState({current: e.key});\r\n    };\r\n\r\n    async connect(){\r\n        const accounts= await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n        const account = accounts[0];\r\n        this.setState({connect: shorter(account)});\r\n        this.setState({access:\"欢迎您为自己支持的团队投票\"});\r\n    }\r\n\r\n    resetTime(){\r\n        this.setState({\r\n            targetTime: new Date().getTime() + 24*60*60*1000\r\n        })\r\n\r\n    }\r\n\r\n    redirect(){\r\n         this.props.history.push('/bye');\r\n\r\n\r\n    }\r\n\r\n    toTop(){\r\n        window.scrollTo(0,0);\r\n    }\r\n    toDown(){\r\n        window.scrollTo(0,600);\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div onLoad={this.toTop} >\r\n                <div className=\"third\">\r\n                    <Row>\r\n                        <Col span={18}>\r\n                        </Col>\r\n                        <Col span={6}>\r\n                            <Button\r\n                                size=\"learge\"\r\n                                shape=\"round\"\r\n                                danger=\"true\"\r\n                                type=\"primary\"\r\n                                className=\"connectButton\"\r\n                                onClick={this.connect}\r\n                            >{this.state.connect}</Button>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Container >\r\n                        <Jumbotron fluid  fluid style={{backgroundColor:'transparent'}}>\r\n                            <Container fluid>\r\n                                <h1 className=\"display-3\" >Vote</h1>\r\n                                <p className=\"lead\" style={{ fontWeight:'bold'}}>{this.state.access}</p>\r\n\r\n                                <CountDown style={{ fontSize: 30 }} target={this.state.targetTime} />\r\n\r\n                                <Row style={{marginTop:\"20px\"}}>\r\n                                    <Col span={8}>\r\n                                    </Col>\r\n                                    <Col span={8}>\r\n                                        <Timeline >\r\n                                            <Timeline.Item>  由DAO组织的管理员发起活动 </Timeline.Item>\r\n                                            <Timeline.Item>由各个项目团队的领袖发起报名</Timeline.Item>\r\n                                            <Timeline.Item style={{ fontSize: '18px',fontWeight:'bold'}}  color=\"red\">由大众进行投票 </Timeline.Item>\r\n                                            <Timeline.Item>根据投票结果得出最终赢家 </Timeline.Item>\r\n                                        </Timeline>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Button type=\"primary\" onClick={this.toDown}>\r\n                                    查看团队信息\r\n                                </Button>\r\n                            </Container>\r\n                        </Jumbotron>\r\n                    </Container>\r\n                </div>\r\n                <div >\r\n\r\n                    <Container>\r\n                        <h1>已报名团队信息</h1>\r\n\r\n                        <CountDown style={{ fontSize: 30 }} target={this.state.targetTime}  onClick={this.resetTime}/>\r\n\r\n\r\n                    </Container>\r\n                    <Row>\r\n\r\n                        <Col span={2}></Col>\r\n                        <Col span={7}>\r\n                            <Card\r\n                                style={{ width: \"90%\"}}\r\n                                cover={\r\n                                    // <img\r\n                                    //     alt=\"example\"\r\n                                    //     src=\"dragon.jpg\"\r\n                                    // />\r\n                                    <img src={dragon} style={{height:\"220px\"}}/>\r\n                                }\r\n                                // actions={[\r\n                                //     <SettingOutlined key=\"setting\" />,\r\n                                //     <EditOutlined key=\"edit\" />,\r\n                                //     <EllipsisOutlined key=\"ellipsis\" />,\r\n                                // ]}\r\n                            >\r\n                                <Meta\r\n                                    // avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\r\n                                    title=\"青龙团队\"\r\n                                />\r\n                                <br/>\r\n                                现有票数\r\n                                <h5> {this.state.cnt1} FDT</h5>\r\n\r\n                            </Card>\r\n                        </Col>\r\n                        <Col span={7}>\r\n                            <Card\r\n                                style={{ width: \"90%\" }}\r\n                                cover={\r\n                                    <img src={tiger} style={{height:\"220px\"}}/>\r\n                                }\r\n                                // actions={[\r\n                                //     <SettingOutlined key=\"setting\" />,\r\n                                //     <EditOutlined key=\"edit\" />,\r\n                                //     <EllipsisOutlined key=\"ellipsis\" />,\r\n                                // ]}\r\n                            >\r\n                                <Meta\r\n                                    // avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\r\n                                    title=\"白虎团队\"\r\n\r\n                                />\r\n                                <br/>\r\n                                现有票数\r\n                                <h5> {this.state.cnt2} FDT</h5>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col span={7}>\r\n                            <Card\r\n                                style={{ width: \"90%\" }}\r\n                                cover={\r\n                                    <img src={bird} style={{height:\"220px\"}}/>\r\n                                }\r\n                                // actions={[\r\n                                //     <SettingOutlined key=\"setting\" />,\r\n                                //     <EditOutlined key=\"edit\" />,\r\n                                //     <EllipsisOutlined key=\"ellipsis\" />,\r\n                                // ]}\r\n                            >\r\n                                <Meta\r\n                                    // avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\r\n                                    title=\"朱雀团队\"\r\n\r\n\r\n                                />\r\n                                <br/>\r\n                                现有票数\r\n                                <h5> {this.state.cnt3} FDT</h5>\r\n\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <br/><br/>\r\n\r\n\r\n                    <Button type=\"primary\" onClick={this.showModal}>\r\n                        填写投票\r\n                    </Button>\r\n                    <Modal title=\"投票信息填写\" visible={this.state.isModalVisible}\r\n                           okText=\"确认投票\"\r\n                           onOk={this.handleOk} onCancel={this.handleCancel}>\r\n\r\n                        <Form.Item\r\n                            label=\"心仪团队\"\r\n                            name=\"name\"\r\n                            rules={[{required: true, message: '填入你想给哪个团队投票'}]}\r\n                        >\r\n                            <Input placeholder=\"填入你想给哪个团队投票\" />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            label=\"投票票数\"\r\n                            name=\"name\"\r\n                            rules={[{required: true, message: 'FluidDAO Token的个数'}]}\r\n                        >\r\n                            <Input placeholder=\"FluidDAO Token的个数，单位为FDT\"/>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            label=\"其他投票信息\"\r\n                            name=\"name\"\r\n                            rules={[{required: true, message: ' '}]}\r\n                        >\r\n                            )\r\n                        </Form.Item>\r\n                    </Modal>\r\n\r\n                    <br/>\r\n                    <br/>\r\n\r\n\r\n                    <Button type=\"\" color=\"yellow-5\" onClick={this.redirect}>\r\n                        投票阶段结束进入最后结果宣布阶段\r\n                    </Button>\r\n\r\n                    <br/><br/>\r\n                    <br/><br/>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Vote;\r\n","import React from 'react';\r\nimport {Container, Jumbotron} from 'reactstrap';\r\nimport {Button, Col, Form, Input, Modal, Row,Timeline} from 'antd';\r\nimport detectEthereumProvider from '@metamask/detect-provider';\r\n\r\nimport { Icon } from '@ant-design/compatible';\r\nimport { notification, Divider, Space } from 'antd';\r\nimport {\r\n    RadiusUpleftOutlined,\r\n    RadiusUprightOutlined,\r\n    RadiusBottomleftOutlined,\r\n    RadiusBottomrightOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport {Link} from \"react-router-dom\";\r\nimport { Card, Avatar } from 'antd';\r\nimport { EditOutlined, EllipsisOutlined, SettingOutlined } from '@ant-design/icons';\r\nimport 'ant-design-pro/dist/ant-design-pro.css';\r\nimport CountDown from 'ant-design-pro/lib/CountDown';\r\nimport './style.css';\r\n\r\nimport dragon from \"../picture/dragon.jpg\"\r\nimport tiger from \"../picture/tiger.jpg\"\r\nimport bird from \"../picture/bird.jpg\"\r\n\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\nconst { Meta } = Card;\r\n\r\nconst openNotification = placement => {\r\n    notification.info({\r\n        duration: 3,\r\n        message: '请先登录钱包',\r\n        description:\r\n            '演示时可直接点击【确认投票】',\r\n        placement,\r\n    });\r\n};\r\n\r\nconst openNotification2 = placement => {\r\n    notification.info({\r\n        duration: 3,\r\n        message: '您已经投票成功！',\r\n        description:\r\n            '真实应用场景时会调用钱包进行token转账',\r\n        placement,\r\n    });\r\n};\r\n\r\n\r\nexport const shorter = (str) =>\r\n    str?.length > 8 ? str.slice(0, 6) + '...' + str.slice(-4) : str\r\n\r\nfunction randomNum(minNum,maxNum){\r\n    switch(arguments.length){\r\n        case 1:\r\n            return parseInt(Math.random()*minNum+1,10);\r\n            break;\r\n        case 2:\r\n            return parseInt(Math.random()*(maxNum-minNum+1)+minNum,10);\r\n            break;\r\n        default:\r\n            return 0;\r\n            break;\r\n    }\r\n}\r\n\r\nlet delta1=1000;\r\nlet delta2=2000;\r\nlet delta3=3000;\r\n\r\nclass Bye extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // [isModalVisible, setIsModalVisible] = useState(false);\r\n        this.state = {\r\n            connect:'connect',\r\n            access: '所有人都可以为你喜欢的团队投票',\r\n            account: '',\r\n            current: 'mail',\r\n            isModelVisible: false,\r\n            setIsModelVisible: false,\r\n            targetTime: new Date().getTime() + 24*60*60*1000,\r\n            cnt1: 1000,\r\n            cnt2: 2000,\r\n            cnt3: 3000\r\n        };\r\n        this.showModal = this.showModal.bind(this);\r\n        this.handleOk = this.handleOk.bind(this);\r\n        this.handleCancel = this.handleCancel.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.connect=this.connect.bind(this);\r\n        this.resetTime=this.resetTime.bind(this);\r\n        this.redirect=this.redirect.bind(this);\r\n        this.toTop=this.toTop.bind(this);\r\n        this.toDown=this.toDown.bind(this);\r\n\r\n    }\r\n    componentDidMount() { // 生命周期\r\n        this.timerID = setInterval(\r\n            () => {\r\n                delta1=delta1+30;\r\n                delta2=delta2+20;\r\n                delta3=delta3+10;\r\n\r\n                this.tick(delta1,delta2,delta3);\r\n            },\r\n            1000\r\n        );\r\n    }\r\n\r\n    componentWillUnmount() { // 生命周期\r\n        clearInterval(this.timerID);\r\n    }\r\n\r\n    tick(delta1,delta2,delta3) {\r\n        this.setState({\r\n            cnt1: delta1,\r\n            cnt2: delta2,\r\n            cnt3: delta3\r\n        });\r\n    }\r\n\r\n\r\n    showModal = () => {\r\n        if(this.state.connect==='connect'){\r\n            openNotification('topLeft');\r\n            // return;\r\n        }\r\n        this.setState({\r\n            isModalVisible: true\r\n        });\r\n    };\r\n\r\n    handleOk = () =>{\r\n        openNotification2('topLeft');\r\n\r\n        this.setState({\r\n            isModalVisible: false\r\n\r\n        });\r\n        // this.props.history.push('/sign');\r\n    }\r\n\r\n    handleCancel = () => {\r\n        // this.state.setIsModalVisible(false);\r\n        this.setState({\r\n            isModalVisible: false\r\n        });\r\n    };\r\n\r\n    handleClick = e => {\r\n        console.log('click ', e);\r\n        this.setState({current: e.key});\r\n    };\r\n\r\n    async connect(){\r\n        const accounts= await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n        const account = accounts[0];\r\n        this.setState({connect: shorter(account)});\r\n        this.setState({access:\"欢迎您为自己支持的团队投票\"});\r\n    }\r\n\r\n    resetTime(){\r\n        this.setState({\r\n            targetTime: new Date().getTime() + 24*60*60*1000\r\n        })\r\n\r\n    }\r\n\r\n    redirect(){\r\n        // this.props.history.push('/vote');\r\n\r\n        window.location.href = \"/\";\r\n    }\r\n\r\n    toTop(){\r\n        window.scrollTo(0,0);\r\n    }\r\n    toDown(){\r\n        window.scrollTo(0,600);\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div onLoad={this.toTop} >\r\n                <div className=\"third\">\r\n                    <Row>\r\n                        <Col span={18}>\r\n                        </Col>\r\n                        <Col span={6}>\r\n                            <Button\r\n                                size=\"learge\"\r\n                                shape=\"round\"\r\n                                danger=\"true\"\r\n                                type=\"primary\"\r\n                                className=\"connectButton\"\r\n                                onClick={this.connect}\r\n                            >{this.state.connect}</Button>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Container >\r\n                        <Jumbotron fluid  fluid style={{backgroundColor:'transparent'}}>\r\n                            <Container fluid>\r\n                                <h1 className=\"display-3\" >Who is winner?</h1>\r\n                                <p className=\"lead\" style={{ fontWeight:'bold'}}>是哪个团队获得桂冠 !!!</p>\r\n\r\n                                {/*<CountDown style={{ fontSize: 30 }} target={this.state.targetTime} />*/}\r\n\r\n                                <br/>\r\n                                <Row style={{marginTop:\"20px\"}}>\r\n                                    <Col span={8}>\r\n                                    </Col>\r\n                                    <Col span={8}>\r\n                                        <Timeline >\r\n                                            <Timeline.Item>  由DAO组织的管理员发起活动 </Timeline.Item>\r\n                                            <Timeline.Item>由各个项目团队的领袖发起报名</Timeline.Item>\r\n                                            <Timeline.Item >由大众进行投票 </Timeline.Item>\r\n                                            <Timeline.Item style={{ fontSize: '18px',fontWeight:'bold'}}  color=\"red\">根据投票结果得出最终赢家 </Timeline.Item>\r\n                                        </Timeline>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Button type=\"primary\" onClick={this.toDown}>\r\n                                    查看最终赢家\r\n                                </Button>\r\n                            </Container>\r\n                        </Jumbotron>\r\n                    </Container>\r\n                    <br/>\r\n                </div>\r\n                <div >\r\n                    <br/>\r\n\r\n                    <Container>\r\n                        <h1> 白虎团队 </h1>\r\n                        {/*<CountDown style={{ fontSize: 30 }} target={this.state.targetTime}  onClick={this.resetTime}/>*/}\r\n\r\n\r\n                    </Container>\r\n\r\n\r\n                    <Row>\r\n\r\n                        <Col span={7}></Col>\r\n\r\n                        <Col span={11}>\r\n                            <Card\r\n                                style={{ width: \"90%\" }}\r\n                                cover={\r\n                                    <img src={tiger} style={{height:400}}/>\r\n                                }\r\n                                // actions={[\r\n                                //     <SettingOutlined key=\"setting\" />,\r\n                                //     <EditOutlined key=\"edit\" />,\r\n                                //     <EllipsisOutlined key=\"ellipsis\" />,\r\n                                // ]}\r\n                            >\r\n\r\n\r\n\r\n                                <h5>将获得 31415926 FDT!!!</h5>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col span={6}></Col>\r\n                    </Row>\r\n\r\n                    <br/><br/>\r\n\r\n\r\n                    <Button type=\"primary\" onClick={this.redirect}>\r\n                        活动圆满结束\r\n                    </Button>\r\n\r\n                    <br/>\r\n                    <br/>\r\n\r\n\r\n\r\n                    <br/><br/>\r\n                    <br/><br/>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Bye;\r\n","// import logo from './logo.svg';\n// import {Button} from 'antd';\n\n\nimport './App.css';\n\nimport React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport {BrowserRouter, Route, Switch, withRouter} from 'react-router-dom';\n\nimport Header from'./Header/Header';\nimport Begin from './pages/Begin';\nimport Sign from './pages/Sign';\nimport Example from './pages/Example';\nimport Font from './pages/Font';\nimport Test from './pages/Test';\nimport Vote from './pages/Vote';\nimport Bye from './pages/Bye';\n\n\n\n\nclass ScrollToTop extends React.Component {\n    componentDidUpdate(prevProps) {\n        if (this.props.location.pathname !== prevProps.location.pathname) {\n            document.getElementById(\"page\").scrollTo(0, 0);\n        }\n    }\n    render() {\n        return this.props.children;\n    }\n}\nconst PageContainer = withRouter(ScrollToTop);\n\n\nfunction App() {\n  return (\n      <div className=\"App\">\n        <BrowserRouter>\n          <Switch>\n            <Route exact path={'/'} component={Font} />\n            <Route exact path={'/begin'} component={Begin} />\n            <Route exact path={'/sign'} component={Sign} />\n            <Route exact path={'/example'} component={Example} />\n            <Route exact path={'/test'} component={Test} />\n            <Route exact path={'/font'} component={Font} />\n            <Route exact path={'/vote'}  component={Vote} />\n            <Route exact path={'/bye'}  component={Bye} />\n\n\n\n\n\n\n\n\n\n\n            {/*<Route exact path={'/input'} component={MyInput}/>*/}\n            {/*<Route exact path={'/account'} component={Account} />*/}\n            {/*<Route exact path={'/asset'} component={Asset} />*/}\n            {/*<Route exact path={'/transaction-algo'} component={TransactionAlgo} />*/}\n            {/*<Route exact path={'/transaction-asa'} component={TransactionASA} />*/}\n            {/*<Route exact path={'/limit-order'} component={LimitOrder} />*/}\n          </Switch>\n        </BrowserRouter>\n\n\n\n\n      </div>\n\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}